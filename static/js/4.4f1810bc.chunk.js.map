{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/FullScreen.js","Components/Player/Hint.js","Components/Player/Progress.js","Components/Player/Player.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","Hint","text","onClientUpdateMediaHint","update","fileId","animated","clearTimeout","checkTimeout","setTimeout","handleAnimationEnd","event","PlayerStore","on","off","classNames","onAnimationEnd","Progress","waiting","handleWaiting","viewBox","height","width","stroke","fill","strokeWidth","strokeDasharray","strokeDashoffset","strokeLinecap","r","cx","cy","Player","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","videoRef","current","handled","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","handlePictureInPicture","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onClientUpdateMediaShortcut","startStopPlayer","play","hidden","paused","pause","handlePlay","onPlay","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","buffered","handleLoadedData","handleLoadedMetadata","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","root","contentRef","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","exitFullscreen","requestFullscreen","handleClickRoot","mouseDownRoot","handleMouseDownRoot","handleVolumeChange","onVolumeChange","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","handleProgress","handleCanPlay","target","a","videoInfo","content","pictureInPictureElement","mozPictureInPictureElement","webkitPictureInPictureElement","exitPictureInPicture","requestPictureInPicture","onpause","addEventListener","handleLeavePictureInPicture","src","removeEventListener","handleDoubleClick","handleVideoKeyDown","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","mouseOverTimeout","getCurrentTime","console","log","file","FileStore","get","remote","unique_id","clearCurrentTime","rootRef","createRef","noPoster","load","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","mozRequestPictureInPicture","webkitRequestPictureInPicture","mozExitPictureInPicture","webkitExitPictureInPicture","children","style","poster","bufferedTime","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","rootStyle","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","pictureInPictureEnabled","mozPictureInPictureEnabled","webkitPictureInPictureEnabled","ref","onMouseDown","onClick","onDoubleClick","onMouseMove","autoPlay","controls","playsInline","onLoadedMetadata","onLoadedData","onCanPlay","onTimeUpdate","onProgress","onWaiting","e","onMouseEnter","onMouseLeave","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","fontSize","length","i","end","PipPlayer","onWindowResize","player","getElementById","oldLeft","parseInt","left","oldTop","top","normalizePosition","handlePlayerMouseDown","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleClose","connectPlayer","window","disconnectPlayer","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","Close","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","navigator","clipboard","writeText","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","currentPackId","OptionStore","suggestedPackId","Map","output","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","THUMBNAIL_BLURRED_SIZE_90","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","transform","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","item","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveInternal","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","tabIndex","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","alpha","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","getTimeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","fadeOutVolume","pausedForRecord","fadeInVolume","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","onClientUpdateMediaBlob","streaming","video_note","onClientUpdateMediaClose","handlePrev","handleNext","mime_type","setFileOptions","moveNext","handleVideoEnded","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","currentVolume","volumeInterval","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","handleTest","chunk","filePart","getArrayBuffer","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","supportsStreaming","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","getMediaPreviewFile","loadNextBuffer","isVideo","isVideoMessage","isAnimation","isAnimationMessage","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleWrapperClick","mouseDownTarget","handleWrapperMouseDown","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdatePictureInPicture","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.4f1810bc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        d='M5,14 C5.55228475,14 6,14.4477153 6,15 L6,18 L9,18 C9.55228475,18 10,18.4477153 10,19 C10,19.5522847 9.55228475,20 9,20 L5,20 C4.44771525,20 4,19.5522847 4,19 L4,15 C4,14.4477153 4.44771525,14 5,14 Z M19,14 C19.5522847,14 20,14.4477153 20,15 L20,15 L20,19 C20,19.5522847 19.5522847,20 19,20 L19,20 L15,20 C14.4477153,20 14,19.5522847 14,19 C14,18.4477153 14.4477153,18 15,18 L15,18 L18,18 L18,15 C18,14.4477153 18.4477153,14 19,14 Z M9,4 C9.55228475,4 10,4.44771525 10,5 C10,5.55228475 9.55228475,6 9,6 L9,6 L6,6 L6,9 C6,9.55228475 5.55228475,10 5,10 C4.44771525,10 4,9.55228475 4,9 L4,9 L4,5 C4,4.44771525 4.44771525,4 5,4 L5,4 Z M19,4 C19.5522847,4 20,4.44771525 20,5 L20,9 C20,9.55228475 19.5522847,10 19,10 C18.4477153,10 18,9.55228475 18,9 L18,6 L15,6 C14.4477153,6 14,5.55228475 14,5 C14,4.44771525 14.4477153,4 15,4 L19,4 Z'\n    />,\n    'FullScreen'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Hint.css';\n\nclass Hint extends React.Component {\n    state = { text: null };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    onClientUpdateMediaHint = update => {\n        const { fileId, text } = update;\n        if (fileId !== this.props.fileId) return;\n\n        const { animated } = this.state;\n\n        clearTimeout(this.checkTimeout);\n        this.setState({\n            text,\n            animated: false\n        }, () => {\n            this.checkTimeout = setTimeout(() => {\n                if (this.state.text !== text) return;\n\n                this.setState({\n                    animated: true\n                })\n            }, 250);\n        });\n    };\n\n    handleAnimationEnd = event => {\n        this.setState({\n            text: null,\n            animated: false\n        })\n    }\n\n    render() {\n        const { animated, text } = this.state;\n        if (!text) return null;\n\n        return (\n            <div className={classNames('player-hint', { 'player-hint-animated': animated })} onAnimationEnd={this.handleAnimationEnd}>\n                <span>{text}</span>\n            </div>\n        );\n    }\n}\n\nHint.propTypes = {\n    fileId: PropTypes.number\n};\n\nexport default Hint;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Progress.css';\n\nclass Progress extends React.Component {\n    state = {\n        waiting: false\n    };\n\n    componentDidMount() {\n        this.handleWaiting();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.waiting !== this.props.waiting) {\n            this.handleWaiting();\n        }\n    }\n\n    handleWaiting = () => {\n        const { waiting } = this.props;\n        if (!waiting) {\n            if (this.state.waiting) {\n                this.setState({\n                    waiting: false\n                });\n            }\n            return;\n        }\n\n        setTimeout(() => {\n            if (!this.props.waiting) return;\n\n            this.setState({\n                waiting: true\n            })\n        }, 250);\n    };\n\n    render() {\n        const { waiting } = this.state;\n\n        if (!waiting) return null;\n\n        return (\n            <div className='player-progress'>\n                <svg viewBox='0 0 54 54' height='54' width='54'>\n                    <circle stroke='white' fill='transparent' strokeWidth='3' strokeDasharray='120 100' strokeDashoffset='25' strokeLinecap='round' r='21' cx='27' cy='27'/>\n                </svg>\n            </div>\n        );\n    }\n\n}\n\nProgress.propTypes = {\n    waiting: PropTypes.bool\n};\n\nexport default Progress;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport Hint from './Hint';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport {\n    PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Player.css';\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.rootRef = React.createRef();\n        this.contentRef = React.createRef();\n        this.videoRef = React.createRef();\n\n        const { currentTime, duration } = this.getCurrentTime();\n\n        console.log('[p] player.ctor noPoster', currentTime > 0 && duration > 0);\n        this.state = {\n            noPoster: currentTime > 0 && duration > 0,\n            duration,\n            currentTime,\n            volume: PlayerStore.volume,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true,\n            hidden: false\n        };\n    }\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    handleVolume = volume => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = this.state;\n\n        video.volume = volume;\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    load() {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        video.load();\n\n        this.setState({\n            duration: 0,\n            currentTime: 0,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true\n        });\n    }\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleLoadedData = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = this.contentRef.current;\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.mouseDownRoot = false;\n        this.startStopPlayer();\n    }\n\n    handleMouseDownRoot = event => {\n        this.mouseDownRoot = true;\n        event.stopPropagation();\n    }\n\n    static getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleMute = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleProgress = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    static getBufferedTime = (time, buffered) => {\n        if (!buffered || !buffered.length) {\n            return 0;\n        }\n\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n            if (start <= time && time < end) {\n                return end;\n            }\n        }\n\n        return 0;\n    }\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePictureInPicture = async () => {\n        const { fileId } = this.props;\n        const { duration, currentTime, volume, play, buffered, waiting } = this.state;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: {\n                fileId,\n                video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting\n            }\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n\n        return;\n\n        if (!video.duration) return;\n\n        const pictureInPictureElement = document.pictureInPictureElement || document.mozPictureInPictureElement || document.webkitPictureInPictureElement;\n        if (pictureInPictureElement) {\n            this.exitPictureInPicture();\n            return;\n        }\n\n        try {\n            const pipWindow = await this.requestPictureInPicture(video);\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaViewerContent',\n                content: null\n            });\n            video.onpause = event => {\n                event.target.play();\n                event.target.onpause = null;\n            };\n            video.addEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n        } catch (error) { }\n    };\n\n    handleLeavePictureInPicture = event => {\n        const video = this.videoRef.current;\n\n        if (!video) event.target.src = null;\n        event.target.removeEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n    };\n\n    async requestPictureInPicture(element) {\n        const method = element.requestPictureInPicture || element.mozRequestPictureInPicture || element.webkitRequestPictureInPicture;\n        if (!method) return null;\n\n        return method.call(element);\n    }\n\n    exitPictureInPicture() {\n        const method = document.exitPictureInPicture || document.mozExitPictureInPicture || document.webkitExitPictureInPicture;\n\n        method && method.call(document);\n    }\n\n    handleDoubleClick = event => {\n        this.handleFullScreen(event);\n    };\n\n    handleVideoKeyDown = event => {\n        event.preventDefault();\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    };\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        console.log('[pip] getCurrentTime fileId', fileId);\n        const file = FileStore.get(fileId);\n        if (!file) return { currentTime: 0, duration: 0 };\n\n        const { remote } = file;\n        if (!remote) return { currentTime: 0, duration: 0 };\n\n        const { unique_id } = remote;\n        if (!unique_id) return { currentTime: 0, duration: 0 };\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { children, src, className, style, width, height, poster, fileId } = this.props;\n        const { waiting, volume, duration, currentTime, play, dragging, draggingTime, buffered, hidden, noPoster } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n        const rootStyle = {\n            ...style,\n            width,\n            height\n        }\n\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n        const pictureInPictureEnabled = document.pictureInPictureEnabled || document.mozPictureInPictureEnabled || document.webkitPictureInPictureEnabled;\n\n        console.log('[p] render', noPoster, poster);\n\n        return (\n            <div\n                ref={this.rootRef}\n                className={classNames('player', className)}\n                onMouseDown={this.handleMouseDownRoot}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}\n                style={rootStyle}>\n                <div ref={this.contentRef} className='player-content' onMouseMove={this.handleMouseOver}>\n                    <video\n                        className='player-video'\n                        ref={this.videoRef}\n                        autoPlay={false}\n                        controls={false}\n                        playsInline={true}\n                        src={src}\n                        poster={!noPoster && poster}\n                        onLoadedMetadata={this.handleLoadedMetadata}\n                        onLoadedData={this.handleLoadedData}\n                        onCanPlay={this.handleCanPlay}\n                        onPlay={this.handlePlay}\n                        onPause={this.handlePause}\n                        onEnded={this.handleEnded}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onVolumeChange={this.handleVolumeChange}\n                        onProgress={this.handleProgress}\n                        onWaiting={this.handleWaiting}\n                        onKeyDown={this.handleVideoKeyDown}\n                    >\n                        {children}\n                    </video>\n                    <Hint fileId={fileId}/>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={e => e.stopPropagation()}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            <button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>\n                                <PictureInPictureIcon/>\n                            </button>\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlayer.propTypes = {\n    fileId: PropTypes.number\n};\n\n//export default React.forwardRef((props, ref) => (<Player forwardedRef={ref} {...props}/>));\n\nexport default Player;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport './PipPlayer.css';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport Slider from '@material-ui/core/Slider';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport Player from './Player';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport Progress from './Progress';\nimport TdLibController from '../../Controllers/TdLibController';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport FileStore from '../../Stores/FileStore';\n\nclass PipPlayer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}>\n                <div className='pip-player-wrapper'>\n                    <div id='pip-player-container'/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={e => e.stopPropagation()}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_2.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: true,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                    }\n                                }}\n                                onClick={this.handleAnimationClick}\n                            />\n                        </React.Suspense>\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        // console.log('[f] filters', filters);\n\n        const filtersMap = new Map();\n        for (let i = 0; i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        // console.log('[f] recommended', recommendedFilters);\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        // console.log('[f] filters.render');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            <React.Suspense fallback={null}>\n                                <Lottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        autoplay: true,\n                                        loop: false,\n                                        animationData: data,\n                                        renderer: 'svg',\n                                        rendererSettings: {\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                            clearCanvas: false,\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        }\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n\n        setTimeout(() => {\n            const { innerText } = this.newMessageRef.current;\n            console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const { streaming } = TdLibController;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        if (streaming) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    if (streaming) return;\n\n                    const { audio: file } = audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const { audio: file } = audio;\n                    if (file) {\n                        let src = getSrc(file);\n                        if (!src && TdLibController.streaming) {\n                            src = `/streaming/file_id=${file.id}`;\n                            setFileOptions(src, { fileId: file.id, size: file.size, mimeType: audio.mime_type });\n                        }\n\n                        return src;\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport { getArrayBuffer } from '../../Utils/File';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    handleTest = async () => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { video } = content;\n        if (!video) return;\n\n        const { video: file } = video;\n        if (!file) return;\n\n        const { size } = file;\n\n        const chunk = 512 * 1024;\n        const count = size / chunk;\n\n        for (let i = 0; i < count; i++) {\n            console.log('[d] filePart', file.id, chunk * i);\n            await TdLibController.send({\n                '@type': 'downloadFile',\n                file_id: file.id,\n                priority: 1,\n                offset: chunk * i,\n                limit: chunk,\n                synchronous: true\n            });\n\n            const filePart = await TdLibController.send({\n                '@type': 'readFilePart',\n                file_id: file.id,\n                offset: chunk * i,\n                count: chunk\n            });\n\n            const buffer = await getArrayBuffer(filePart.data);\n        }\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleTest}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary='Test' />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    const { name, text } = props;\n\n    return (\n        <a id={name}>\n            {text && <RichText text={text} />}\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying, supportsStreaming } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        // setTimeout(() => KeyboardManager.add(this.keyboardHandler), 0);\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        // console.log('[p] mainPage.render');\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}